.prepend-top
  .span-2
  .span-20
    .explain.w
      %span.featured
        Writing
      Um blog. Apenas mais um blog. Sobre tudo que não for trabalho. Papo à toa.
      %br
      %br
      %br
  .span-2
.prepend-1.span-15
  %p
    Ordene por
    = order @search, :by => :edited_at, :as => t("activerecord.attributes.post.edited_at").humanize
    ou
    = order @search, :by => :title, :as => t("activerecord.attributes.post.title").humanize
    ou
    = order @search, :by => :published_at, :as => t("activerecord.attributes.post.published_at").humanize

  #posts
    - @posts.each do |post|
      .post-card
        %h2
          = link_to post.title, post_path(:id => "#{post.id}-#{h(post.title)}" ), :class => 'link-post'
        .post-header
          %span
            = link_to post.user.login, user_path(post.user), :class => 'link-user'
            ,
          %span.date
            criada em
            = l(post.created_at, :format => 'short')
            ,
          %span.date-edit
            última edição em
            = l(post.edited_at, :format => 'short')
        .post-tags
          %p
            tags:
            - post.tag_list.each do |t|
              %span
                = link_to t, posts_path( :search => { :tagged_with_on_tags => t })
        .post-body
          = post.formatted_body
        .post-footer
          = link_to 'comentários', post_url(:id => "#{post.id}-#{h(post.title)}#disqus_thread" )
        %hr
    %p.paginate
      = will_paginate @posts

.span-8.last
  .sidebar
    - form_for @search do |f|
      %p
        Busca no texto
        %br/
        = f.text_field :body_like, :size => 20
        %br/
        ou nas tags
        %br/
        = f.text_field :tagged_with_on_tags, :size => 20
      %p
        = submit_tag "Enviar", :disable => 'buscando...'
        ou
        = link_to "limpar", posts_path
    .tag_cloud
      %p
        Núvem de tags
        %br/
        - if @tags.size > 0
          - tag_cloud @tags, %w(level1 level2 level3 level4) do |tag, css_class|
            = link_to tag.name, posts_path(:search => { :tagged_with_on_tags => tag.name }), :class => css_class

= disqus_comments_tag(Settings::DISQUS_SITE_ID)